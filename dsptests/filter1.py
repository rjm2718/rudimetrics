#!/usr/bin/python3

# test bandpass filter 200hz to 2Khz .....


# t = numpy.arange(5000)
# w = t * 2 * numpy.pi
# v = numpy.sin(w / 100) + numpy.sin(w / 120)
# import matplotlib.pyplot as plt
# plt.plot(v)
# plt.show()



import numpy
import scipy
import scipy.io.wavfile
import matplotlib.pyplot as plt
import random
from numpy.core.multiarray import arange
from scipy.fftpack import fft

lp1 = [0.04] * 25 
bp1 = [ 0.005397269191405015, 0.0008457651168568725, 0.0008136715877024276, 0.0007046304804569404, 0.0005104582996476813, 0.00022389525175854435, -0.0001609816047916335, -0.0006484026700380088, -0.001239245779089801, -0.0019309128517532392, -0.002721276670056771, -0.0035992754081265515, -0.004555158712216476, -0.005572144863527612, -0.0066317563882471115, -0.0077112766157534235, -0.00878542991760998, -0.00982598320973568, -0.01080217782878735, -0.011682237078268959, -0.01243195611582917, -0.013018867967283928, -0.013408315191388834, -0.013570451208529894, -0.013474791880087487, -0.01309600235879561, -0.012412482573167053, -0.011406734963198247, -0.010066846277924878, -0.0083866125570847, -0.006369836124630165, -0.004011901712080111, -0.0013531001134183252, 0.0016110775698348833, 0.004842786908367537, 0.00830321621001066, 0.011952050959582659, 0.01574396405637999, 0.019627869734745586, 0.02354954291285845, 0.027452720437955398, 0.03127125536577462, 0.034951045199737886, 0.0384296495406493, 0.04165230938541577, 0.04456565764864396, 0.04712124255479181, 0.04927553567237189, 0.05099157295537469, 0.052239731982161565, 0.052997214057437556, 0.0532516336679295, 0.052997214057437556, 0.052239731982161565, 0.05099157295537469, 0.04927553567237189, 0.04712124255479181, 0.04456565764864396, 0.04165230938541577, 0.0384296495406493, 0.034951045199737886, 0.03127125536577462, 0.027452720437955398, 0.02354954291285845, 0.019627869734745586, 0.01574396405637999, 0.011952050959582659, 0.00830321621001066, 0.004842786908367537, 0.0016110775698348833, -0.0013531001134183252, -0.004011901712080111, -0.006369836124630165, -0.0083866125570847, -0.010066846277924878, -0.011406734963198247, -0.012412482573167053, -0.01309600235879561, -0.013474791880087487, -0.013570451208529894, -0.013408315191388834, -0.013018867967283928, -0.01243195611582917, -0.011682237078268959, -0.01080217782878735, -0.00982598320973568, -0.00878542991760998, -0.0077112766157534235, -0.0066317563882471115, -0.005572144863527612, -0.004555158712216476, -0.0035992754081265515, -0.002721276670056771, -0.0019309128517532392, -0.001239245779089801, -0.0006484026700380088, -0.0001609816047916335, 0.00022389525175854435, 0.0005104582996476813, 0.0007046304804569404, 0.0008136715877024276, 0.0008457651168568725, 0.005397269191405015]




def firConv(s, coefs):

    s2 = []
    for i in range(0, len(s)):

        av = 0.0
        for k in range(0, len(coefs)):

            if i-k >= 0: sv = s[i-k]
            else: sv = 0

            av += coefs[k] * sv;

        s2.append(int(av))

    for i in range(0, len(s)):
        s[i] = s2[i]







def plotSpectr(s, Fs, color='g'):

    N = len(s)
    T = N / float(Fs)
    freqs = arange(N/8) / T
    Y = fft(s) / N
    Y = Y[range(N/8)]

    plt.plot(freqs, abs(Y), color)





fn = 'flam-sample1.wav'

#Fs = 44100
#t = numpy.arange(4096)
#w = t * 2 * numpy.pi
#s = numpy.sin(w / 16) + numpy.sin(w / 130) + numpy.sin(w / 62)
#s = map(lambda x: int(20000*x), s)
Fs, s = scipy.io.wavfile.read(fn)

N = len(s)


plt.figure(num=1, figsize=(20,10))

plt.subplot(221)
plt.plot(arange(0, N), s, 'b')

plt.subplot(222)
plotSpectr(s, Fs, 'b')



firConv(s, bp1)
plt.subplot(223)
plt.plot(arange(0, N), s, 'r')
plt.subplot(224)
plotSpectr(s, Fs, 'r')

plt.show()











